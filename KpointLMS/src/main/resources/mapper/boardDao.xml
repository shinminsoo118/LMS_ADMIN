<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="board">
	<!--########################## 게시판 관련 부분 ##########################--> 
	<!-- 게시판 검색조건 -->
	<sql id="boardWhere">
		<if test='KEYWORD != null and KEYWORD != "" and KEYSTRING != null and KEYSTRING != ""'>
			<where>
				<choose>
					<when test='KEYWORD == "TITLE_CONTENT"'>
						TITLE LIKE '%${KEYSTRING}%' OR CONTENT LIKE '%${KEYSTRING}%'
					</when>
					<otherwise>
						${KEYWORD} LIKE '%${KEYSTRING}%'
					</otherwise>
				</choose>
			</where>
		</if>
	</sql>
	
	<!-- 게시물 전체목록수를 가져오는 부분 -->
	<select id="getTotalList" parameterType="hashMap" resultType="Integer">
		SELECT COUNT(*) AS TOTAL_COUNT FROM ${BOARDTBL} AS A LEFT OUTER JOIN TBL_MEMBERS AS B ON A.WRITER = B.USERID 
		<include refid="boardWhere"/>
	</select>
	
	<!-- 페이지에 나타날 목록을 가져오는 부분 -->
 	<select id="getBoardList" parameterType="hashMap" resultType="hashMap">
 		SELECT SEQ, BOARDID, GROUPS, WRITER, TITLE, COMMENTCNT, REGDATE, HIT, GROUPID, DEPTH, ORDERINDEX, USERNAME, USEREMAIL
 		FROM ${BOARDTBL} AS A LEFT OUTER JOIN TBL_MEMBERS AS B ON A.WRITER = B.USERID
 		<include refid="boardWhere"/>
 		ORDER BY GROUPID DESC, ORDERINDEX ASC
 		LIMIT #{START}, #{END}
 	</select>
 	
 	<!-- 페이지 보기, 페이지를 만하루가 지나서 처음인지 아닌지 확인 -->
 	<select id="getBoardViewCount" parameterType="hashmap" resultType="hashMap">
 		<![CDATA[
 			SELECT COUNT(*) AS SEQCOUNT FROM TBL_VIEW_UPDATES
 			WHERE BOARDID = #{bid} 
 			AND BOARDSEQ = #{SEQ}
 			AND VIEWUSER = #{VIEWUSER}
 			AND VIEWPAGE = 'Y'
 			AND (DATE(VIEWDATE) >= DATE_SUB(now(), INTERVAL 1 DAY) AND DATE(VIEWDATE) <= DATE(now()))
 		]]>
 	</select>
 	
 	<!-- 페이지 추천, 추천을 만하루가 지나서 처음인지 아닌지 확인 -->
 	<select id="getRecommandationCount" parameterType="hashmap" resultType="hashMap">
 		<![CDATA[
 			SELECT COUNT(*) AS SEQCOUNT FROM TBL_VIEW_UPDATES
 			WHERE BOARDID = #{bid} 
 			AND BOARDSEQ = #{SEQ}
 			AND VIEWUSER = #{VIEWUSER}
 			AND RECOMMANDATION = 'Y'
 			AND (DATE(RECODATE) >= DATE_SUB(now(), INTERVAL 1 DAY) AND DATE(RECODATE) <= DATE(now()))
 		]]>
 	</select>
 	
 	<!-- 페이지 비추천, 비추천을 만하루가 지나서 처음인지 아닌지 확인 -->
 	<select id="getNoRecommandationCount" parameterType="hashmap" resultType="hashMap">
 		<![CDATA[
 			SELECT COUNT(*) AS SEQCOUNT FROM TBL_VIEW_UPDATES
 			WHERE BOARDID = #{bid} 
 			AND BOARDSEQ = #{SEQ}
 			AND VIEWUSER = #{VIEWUSER}
 			AND NORECOMMANDATION = 'Y'
 			AND (DATE(NORECODATE) >= DATE_SUB(now(), INTERVAL 1 DAY) AND DATE(NORECODATE) <= DATE(now()))
 		]]>
 	</select>
 	
 	<!-- 페이지상세보기가 만하루가 지났으면 TBL_VIEW_UPDATES 입력 -->
 	<insert id="setBoardViewInsert" parameterType="hashmap" >
 		INSERT INTO TBL_VIEW_UPDATES(BOARDID, BOARDSEQ, VIEWUSER, VIEWPAGE, VIEWDATE)
 		VALUES(#{bid}, #{SEQ}, #{VIEWUSER}, 'Y', Now())
 	</insert>
 	
 	<!-- 추천수를 업데이트 함. -->
 	<update id="setBoardRecommandationUpdate" parameterType="hashmap" useGeneratedKeys="true" keyProperty="GETRECOMMANDATION">
 		
 		UPDATE ${BOARDTBL} SET RECOMMANDATION = RECOMMANDATION+1 WHERE BOARDID = #{bid} AND SEQ = #{SEQ}
 	</update>
 	
 	<select id="getBoardRecommandationUpdate" parameterType="hashmap" resultType="Integer">
 		SELECT RECOMMANDATION FROM ${BOARDTBL} WHERE BOARDID = #{bid} AND SEQ = #{SEQ}
 	</select>
 	
 	<update id="setRecommandation" parameterType="hashmap">
 		UPDATE TBL_VIEW_UPDATES SET RECOMMANDATION = 'Y', RECODATE = NOW() WHERE BOARDID = #{bid} AND BOARDSEQ = #{SEQ} AND VIEWUSER = #{VIEWUSER}
 	</update>
 	
 	<!-- 비추천수를 업데이트 함. -->
 	<update id="setBoardNoRecommandationUpdate" parameterType="hashmap" useGeneratedKeys="true" keyProperty="GETNORECOMMANDATION">
 		UPDATE ${BOARDTBL} SET NORECOMMANDATION = NORECOMMANDATION+1 WHERE BOARDID = #{bid} AND SEQ = #{SEQ}
 	</update>
 	
 	<select id="getBoardNoRecommandationUpdate" parameterType="hashmap" resultType="Integer">
 		SELECT NORECOMMANDATION FROM ${BOARDTBL} WHERE BOARDID = #{bid} AND SEQ = #{SEQ}
 	</select>
 	
 	<update id="setNoRecommandation" parameterType="hashmap">
 		UPDATE TBL_VIEW_UPDATES SET NORECOMMANDATION = 'Y', NORECODATE = NOW() WHERE BOARDID = #{bid} AND BOARDSEQ = #{SEQ} AND VIEWUSER = #{VIEWUSER}
 	</update>
 	
 	<!-- 페이지 상세보기 부분을 가져오는 곳 -->
 	<select id="getBoardDetail"  parameterType="hashmap" resultType="hashmap">
 		SELECT SEQ, BOARDID, WRITER, TITLE, CONTENT, GROUPID, DEPTH, ORDERINDEX, REGDATE, RECOMMANDATION, NORECOMMANDATION, HIT, USERNAME, USERIMG, USEREMAIL 
 		FROM ${BOARDTBL} AS A JOIN TBL_MEMBERS AS B ON A.WRITER = B.USERID
 		WHERE SEQ = #{SEQ}
 	</select>
 	
 	<!-- 답글이 아닌 새글을 등록. -->
 	<insert id="setBoardInsert" parameterType="hashMap" useGeneratedKeys="true" keyProperty="SEQ">
 		<selectKey keyProperty="SEQ" order="BEFORE" resultType="Integer" >
 			SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = #{BOARDTBL}
 		</selectKey>
 		INSERT INTO ${BOARDTBL}(BOARDID, GROUPS, WRITER, TITLE, COMMENTCNT, CONTENT, REGDATE, HIT, GROUPID, DEPTH, ORDERINDEX)
 		VALUES(#{bid}, 'ALL', #{WRITER}, #{TITLE}, 0, #{CONTENT}, Now(), 0, #{SEQ}, 0, 0)
 	</insert>
 	
 	<!-- 답글게시판의 조건에 맞는 Order의 값을 가져옴 null 이거나 조건에 맞는 최소값 -->
	<select id="board.getBoardOrderIndex" parameterType="hashmap" resultType="Object">
		<![CDATA[
			SELECT MIN(ORDERINDEX) FROM ${BOARDTBL} 
			WHERE GROUPID = #{GROUPID} 
			AND ORDERINDEX > #{ORDERINDEX}
			AND DEPTH <= #{DEPTH}
		]]>
	</select>
 	
 	<!-- null이 아닐경우 orderIndex 보다 크거나 같은 값은 업데이트 함. -->
 	<update id="setBoardReplyUpdateIndex" parameterType="hashmap" >
 		<![CDATA[
 			UPDATE ${BOARDTBL}
 			SET ORDERINDEX = ORDERINDEX + 1
 			WHERE GROUPID = #{GROUPID}
 			AND ORDERINDEX >= #{ORDERINDEX}
 		]]>
 	</update>
 	
 	<select id="getBoardMaxOrderIndex" parameterType="hashMap" resultType="Integer">
 		SELECT MAX(ORDERINDEX)+1 FROM ${BOARDTBL}
 		WHERE GROUPID = #{GROUPID}
 	</select>
 	<!-- 답글을 맨뒤에 새로 등록함. -->
 	<insert id="setBoardReplyInsert" parameterType="hashMap"  useGeneratedKeys="true" keyProperty="SEQ" >
 		<selectKey keyProperty="INSERTSEQ" order="BEFORE" resultType="Integer">
 			SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = #{BOARDTBL}
 		</selectKey>
 		INSERT INTO ${BOARDTBL}(BOARDID, GROUPS, WRITER, TITLE, COMMENTCNT, CONTENT, REGDATE, HIT, GROUPID, DEPTH, ORDERINDEX)
 		VALUES(#{bid}, 'ALL', #{WRITER}, #{TITLE}, 0, #{CONTENT}, Now(), 0, #{GROUPID}, #{DEPTH}+1, #{MAXORDERINDEX})
 	</insert>
 	
 	<!-- 답글을 중간에 새로 등록함. -->
 	<insert id="setBoardReplyInsertIndex" parameterType="hashMap"  useGeneratedKeys="true" keyProperty="INSERTSEQ" >
 		<selectKey keyProperty="INSERTSEQ" order="BEFORE" resultType="Integer">
 			SELECT AUTO_INCREMENT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = #{BOARDTBL}
 		</selectKey>
 		INSERT INTO ${BOARDTBL}(BOARDID, GROUPS, WRITER, TITLE, COMMENTCNT, CONTENT, REGDATE, HIT, GROUPID, DEPTH, ORDERINDEX)
 		VALUES(#{bid}, 'ALL', #{WRITER}, #{TITLE}, 0, #{CONTENT}, Now(), 0, #{GROUPID}, #{DEPTH}+1, #{ORDERINDEX})
 	</insert>
 	
 	<!-- 게시판 글을 수정함 -->
 	<update id="setBoardUpdate"  parameterType="hashMap">
 		UPDATE ${BOARDTBL}
 		SET TITLE=#{TITLE}, CONTENT=#{CONTENT}
 		WHERE SEQ = #{SEQ}
 	</update>
 	
 	<!-- 게시판 글을 삭제함. -->
 	<delete id="setBoardDelete" parameterType="hashMap">
 		DELETE FROM ${BOARDTBL}
 		WHERE GROUPID = #{GROUPID}
 		AND ORDERINDEX >= #{ORDERINDEX}
 	</delete>
 	
 	<delete id="setBoardDeleteOfOrderIndex" parameterType="hashMap">
 		<![CDATA[
 			DELETE FROM ${BOARDTBL}
	 		WHERE GROUPID = #{GROUPID}
	 		AND ORDERINDEX >= #{ORDERINDEX}
	 		AND ORDERINDEX < #{orderIndex}
 		]]>
 	</delete>
 	
 	<delete id="setCommentAll"  parameterType="hashMap">
 		DELETE FROM TBL_BOARD_COMMENTS
 		WHERE BOARDID = #{bid}
 		AND BOARDSEQ = #{SEQ}
 	</delete>
 	
 	<!-- 조회수를 업데이트 함. -->
 	<update id="setBoardHitUpdate" parameterType="hashMap">
 		UPDATE ${BOARDTBL} 
 		SET HIT = HIT+1
 		WHERE SEQ = #{SEQ} AND BOARDID = #{bid}
 	</update>
 	
 	<!-- 코멘트를 달았을때 보드에 코멘트 카운터를 업데이트 하는 부분 -->
 	<update id="setBoardCommentCountUpdate" parameterType="hashmap">
 		UPDATE ${BOARDTBL}
 		SET COMMENTCNT = COMMENTCNT + #{COUNT}
 		WHERE BOARDID=#{bid} AND SEQ=#{BOARDSEQ}
 	</update>
 	
 	<!--########################## 코멘트 관련 부분 ##########################-->
 	<!-- 코멘트 리스트를 가져오는 부분 -->
 	<select id="getCommentList" parameterType="hashMap" resultType="hashMap">
 		SELECT SEQ, BOARDID, BOARDSEQ, WRITER, COMMENT, GROUPID, DEPTH, ORDERINDEX, REGDATE, USERNAME, USERIMG 
 		FROM TBL_BOARD_COMMENTS AS A JOIN TBL_MEMBERS AS B ON A.WRITER = B.USERID
 		WHERE BOARDSEQ = #{SEQ} AND BOARDID = #{bid}
 		ORDER BY GROUPID ASC, ORDERINDEX ASC
 	</select>
 	
 	<!-- 댓글이 아닌 새로운 코멘트를 입력함. -->
 	<insert id="setCommentInsert" parameterType="hashMap" >
 		<selectKey resultType="int" order="BEFORE" keyProperty="groupId">
 			SELECT IFNULL(MAX(GROUPID),0)+1 FROM TBL_BOARD_COMMENTS
 		</selectKey>
 		INSERT INTO TBL_BOARD_COMMENTS(BOARDID, BOARDSEQ, WRITER, COMMENT, GROUPID, DEPTH, ORDERINDEX, REGDATE)
 		VALUES(#{bid}, #{BOARDSEQ}, #{WRITER}, #{COMMENT}, #{groupId}, '0', '0', Now())
 	</insert>
 	
 	<!-- 코멘트 답글의 Order의 값을 가져옴 null 이거나 조건에 맞는 최소값 -->
	<select id="board.getCommentOrderIndex" parameterType="hashmap" resultType="Object">
		<![CDATA[
			SELECT MIN(ORDERINDEX) FROM TBL_BOARD_COMMENTS
			WHERE GROUPID = #{GROUPID} 
			AND ORDERINDEX > #{ORDERINDEX}
			AND DEPTH <= #{DEPTH}
		]]>
	</select>
 	
 	<!-- 코멘트 답글을 새로 등록함. -->
 	<insert id="setCommentReplyInsert" parameterType="hashMap" >
 		<selectKey keyProperty="ORDERINDEX" order="BEFORE" resultType="Integer">
 			SELECT MAX(ORDERINDEX)+1 FROM TBL_BOARD_COMMENTS
 			WHERE GROUPID = #{GROUPID}
 		</selectKey>
 		INSERT INTO TBL_BOARD_COMMENTS(BOARDID, BOARDSEQ, WRITER, COMMENT, GROUPID, DEPTH, ORDERINDEX, REGDATE)
 		VALUES(#{bid}, #{BOARDSEQ}, #{WRITER}, #{COMMENT}, #{GROUPID}, #{DEPTH}+1, #{ORDERINDEX}, Now())
 	</insert>
 	
 	<!-- 코멘트중 ORDERINDEX 값보다 크거나 같은 값을 update 함. -->
 	<update id="setCommentReplyUpdateIndex" parameterType="hashmap">
 		UPDATE TBL_BOARD_COMMENTS
 		SET ORDERINDEX = ORDERINDEX + 1
 		WHERE GROUPID = #{GROUPID}
 		AND ORDERINDEX >= #{ORDERINDEX}
 	</update>
 	
 	<!-- 코멘트 중간 사이사이에 새로운 글을 넣음. -->
 	<insert id="setCommentReplyInsertOfIndex" parameterType="hashMap">
 		INSERT INTO TBL_BOARD_COMMENTS(BOARDID, BOARDSEQ, WRITER, COMMENT, GROUPID, DEPTH, ORDERINDEX, REGDATE)
 		VALUES(#{bid}, #{BOARDSEQ}, #{WRITER}, #{COMMENT}, #{GROUPID}, #{DEPTH}+1, #{ORDERINDEX}, Now())
 	</insert>
 	
 	<select id="getCommentView" parameterType="hashmap" resultType="hashMap">
		<![CDATA[
			SELECT COMMENT FROM TBL_BOARD_COMMENTS
			WHERE SEQ = #{SEQ} 
		]]>
	</select>
	
	<update id="setCommentUpdate" parameterType="hashmap" >
		<![CDATA[
			UPDATE TBL_BOARD_COMMENTS
			SET COMMENT = #{COMMENT}
			WHERE SEQ = #{SEQ} 
		]]>
	</update>
	
	<delete id="setCommentDelete" parameterType="hashMap" >
		DELETE FROM TBL_BOARD_COMMENTS
		WHERE BOARDID = #{BOARDID}
		AND BOARDSEQ = #{BOARDSEQ}
		AND GROUPID = #{GROUPID}
		AND ORDERINDEX >= #{ORDERINDEX}
	</delete>
	
	<delete id="setCommentDeleteOfOrderIndex" parameterType="hashMap">
		<![CDATA[
			DELETE FROM TBL_BOARD_COMMENTS
			WHERE BOARDID = #{BOARDID}
			AND BOARDSEQ = #{BOARDSEQ}
			AND GROUPID = #{GROUPID}
			AND ORDERINDEX >= #{ORDERINDEX}
			AND ORDERINDEX < #{orderIndex}
		]]>
	</delete>
	
 	<!--######################## 테이블정보 관련 부분 ########################-->
 	<!-- 보드 설정파일을 가져오는 부분 -->
 	<select id="getBoardConfig" parameterType="hashmap" resultType="hashmap">
 		SELECT * FROM TBL_BOARDCONFIG WHERE BOARDID = #{bid}
 	</select>
</mapper>
