<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
  	   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
  	   http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- base-package 폴더에 어노테이션 되어 있는 요소들을 찾음. -->
	<context:component-scan base-package="com.kpoint.LMS"  use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- Enables the Spring MVC @Controller programming model -->

	<mvc:annotation-driven>
        <mvc:argument-resolvers>
            <bean class="com.kpoint.LMS.common.resolver.CustomMapArgumentResolver"></bean>       
        </mvc:argument-resolvers>
    </mvc:annotation-driven>
	
	<mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <bean id="loggerInterceptor" class="com.kpoint.LMS.common.logger.LoggerInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>
	
	<aop:aspectj-autoproxy />
    <bean id="boardAspect" class="com.kpoint.LMS.common.aop.BoardConfigAspect" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- <resources mapping="/resources/**" location="/resources/" /> -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean> -->
	
	<!-- tiles 관련 설정파일 -->
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
        <property name="definitions" value="/WEB-INF/spring/tiles-context.xml"/>
    </bean>
    
    <bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
    	<property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView" />
    </bean>

    <!-- JackJon 관련 설정파일 -->
    <bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
  	
  	<bean name="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
  		<property name="maxUploadSize" value="10000000"></property>
  	</bean>	
</beans>
